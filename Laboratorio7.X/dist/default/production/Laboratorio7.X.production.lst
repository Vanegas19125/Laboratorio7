

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Apr 18 20:29:14 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataBANK0
   214  0202                     __pidataBANK0:
   215                           
   216                           ;initializer for _tableDisplay
   217  0202  343F               	retlw	63
   218  0203  3406               	retlw	6
   219  0204  345B               	retlw	91
   220  0205  344F               	retlw	79
   221  0206  3466               	retlw	102
   222  0207  346D               	retlw	109
   223  0208  347D               	retlw	125
   224  0209  3407               	retlw	7
   225  020A  347F               	retlw	127
   226  020B  346F               	retlw	111
   227  0007                     _PORTC	set	7
   228  0006                     _PORTBbits	set	6
   229  0008                     _PORTDbits	set	8
   230  0005                     _PORTA	set	5
   231  0008                     _PORTD	set	8
   232  0001                     _TMR0	set	1
   233  000B                     _INTCONbits	set	11
   234  0096                     _IOCB	set	150
   235  0081                     _OPTION_REGbits	set	129
   236  0085                     _TRISA	set	133
   237  0088                     _TRISD	set	136
   238  0087                     _TRISC	set	135
   239  0086                     _TRISB	set	134
   240  0189                     _ANSELH	set	393
   241  0188                     _ANSEL	set	392
   242                           
   243                           	psect	cinit
   244  0013                     start_initialization:	
   245                           ; #config settings
   246                           
   247  0013                     __initialization:
   248                           
   249                           ; Initialize objects allocated to BANK0
   250  0013  1383               	bcf	3,7	;select IRP bank0
   251  0014  302A               	movlw	low (__pdataBANK0+10)
   252  0015  00FD               	movwf	btemp+-1
   253  0016  3002               	movlw	high __pidataBANK0
   254  0017  00FE               	movwf	btemp
   255  0018  3002               	movlw	low __pidataBANK0
   256  0019  00FF               	movwf	btemp+1
   257  001A  3020               	movlw	low __pdataBANK0
   258  001B  0084               	movwf	4
   259  001C  120A  118A  21F3  120A  118A  	fcall	init_ram0
   260                           
   261                           ; Clear objects allocated to BANK0
   262  0021  01AF               	clrf	__pbssBANK0& (0+127)
   263  0022  01B0               	clrf	(__pbssBANK0+1)& (0+127)
   264  0023  01B1               	clrf	(__pbssBANK0+2)& (0+127)
   265                           
   266                           ; Clear objects allocated to COMMON
   267  0024  01FD               	clrf	__pbssCOMMON& (0+127)
   268  0025                     end_of_initialization:	
   269                           ;End of C runtime variable initialization code
   270                           
   271  0025                     __end_of__initialization:
   272  0025  0183               	clrf	3
   273  0026  120A  118A  29A2   	ljmp	_main	;jump to C main() function
   274                           
   275                           	psect	bssCOMMON
   276  007D                     __pbssCOMMON:
   277  007D                     _contador:
   278  007D                     	ds	1
   279                           
   280                           	psect	bssBANK0
   281  002F                     __pbssBANK0:
   282  002F                     _Decimal:
   283  002F                     	ds	3
   284                           
   285                           	psect	dataBANK0
   286  0020                     __pdataBANK0:
   287  0020                     _tableDisplay:
   288  0020                     	ds	10
   289                           
   290                           	psect	inittext
   291  01EF                     init_fetch0:	
   292                           ;	Called with low address in FSR and high address in W
   293                           
   294  01EF  087E               	movf	btemp,w
   295  01F0  008A               	movwf	10
   296  01F1  087F               	movf	btemp+1,w
   297  01F2  0082               	movwf	2
   298  01F3                     init_ram0:	
   299                           ;Called with:
   300                           ;	high address of idata address in btemp 
   301                           ;	low address of idata address in btemp+1 
   302                           ;	low address of data in FSR
   303                           ;	high address + 1 of data in btemp-1
   304                           
   305  01F3  120A  118A  21EF  120A  118A  	fcall	init_fetch0
   306  01F8  0080               	movwf	0
   307  01F9  0A84               	incf	4,f
   308  01FA  0804               	movf	4,w
   309  01FB  067D               	xorwf	btemp+-1,w
   310  01FC  1903               	btfsc	3,2
   311  01FD  3400               	retlw	0
   312  01FE  0AFF               	incf	btemp+1,f
   313  01FF  1903               	btfsc	3,2
   314  0200  0AFE               	incf	btemp,f
   315  0201  29F3               	goto	init_ram0
   316                           
   317                           	psect	cstackCOMMON
   318  0070                     __pcstackCOMMON:
   319  0070                     ?_ISR:
   320  0070                     ?_main:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?___wmul:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?___awdiv:	
   327                           ; 2 bytes @ 0x0
   328                           
   329  0070                     ?___awmod:	
   330                           ; 2 bytes @ 0x0
   331                           
   332  0070                     ___wmul@multiplier:	
   333                           ; 2 bytes @ 0x0
   334                           
   335  0070                     ___awdiv@divisor:	
   336                           ; 2 bytes @ 0x0
   337                           
   338  0070                     ___awmod@divisor:	
   339                           ; 2 bytes @ 0x0
   340                           
   341                           
   342                           ; 2 bytes @ 0x0
   343  0070                     	ds	2
   344  0072                     ___wmul@multiplicand:
   345  0072                     ___awdiv@dividend:	
   346                           ; 2 bytes @ 0x2
   347                           
   348  0072                     ___awmod@dividend:	
   349                           ; 2 bytes @ 0x2
   350                           
   351                           
   352                           ; 2 bytes @ 0x2
   353  0072                     	ds	2
   354  0074                     ??___wmul:
   355  0074                     ??___awdiv:	
   356                           ; 1 bytes @ 0x4
   357                           
   358  0074                     ??___awmod:	
   359                           ; 1 bytes @ 0x4
   360                           
   361  0074                     ___wmul@product:	
   362                           ; 1 bytes @ 0x4
   363                           
   364                           
   365                           ; 2 bytes @ 0x4
   366  0074                     	ds	1
   367  0075                     ___awdiv@counter:
   368  0075                     ___awmod@counter:	
   369                           ; 1 bytes @ 0x5
   370                           
   371                           
   372                           ; 1 bytes @ 0x5
   373  0075                     	ds	1
   374  0076                     ___awdiv@sign:
   375  0076                     ___awmod@sign:	
   376                           ; 1 bytes @ 0x6
   377                           
   378                           
   379                           ; 1 bytes @ 0x6
   380  0076                     	ds	1
   381  0077                     ___awdiv@quotient:
   382                           
   383                           ; 2 bytes @ 0x7
   384  0077                     	ds	2
   385  0079                     ?_ConvertDec:
   386  0079                     ConvertDec@valor:	
   387                           ; 1 bytes @ 0x9
   388                           
   389                           
   390                           ; 2 bytes @ 0x9
   391  0079                     	ds	2
   392  007B                     ??_ConvertDec:
   393                           
   394                           ; 1 bytes @ 0xB
   395  007B                     	ds	2
   396                           
   397                           	psect	cstackBANK0
   398  002A                     __pcstackBANK0:
   399  002A                     ??_ISR:
   400                           
   401                           ; 1 bytes @ 0x0
   402  002A                     	ds	5
   403  002F                     ??_main:
   404                           
   405                           	psect	maintext
   406  01A2                     __pmaintext:	
   407                           ; 1 bytes @ 0x5
   408 ;;
   409 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   410 ;;
   411 ;; *************** function _main *****************
   412 ;; Defined at:
   413 ;;		line 114 in file "main.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;		None
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, status,2, status,0
   422 ;; Tracked objects:
   423 ;;		On entry : B00/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   427 ;;      Params:         0       0       0       0       0
   428 ;;      Locals:         0       0       0       0       0
   429 ;;      Temps:          0       0       0       0       0
   430 ;;      Totals:         0       0       0       0       0
   431 ;;Total ram usage:        0 bytes
   432 ;; Hardware stack levels required when called:    3
   433 ;; This function calls:
   434 ;;		Nothing
   435 ;; This function is called by:
   436 ;;		Startup code after reset
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           
   441                           ;psect for function _main
   442  01A2                     _main:
   443  01A2                     l1003:	
   444                           ;incstack = 0
   445                           ; Regs used in _main: [wreg+status,2+status,0]
   446                           
   447                           
   448                           ;main.c: 116:     TRISB = 3;
   449  01A2  3003               	movlw	3
   450  01A3  1683               	bsf	3,5	;RP0=1, select bank1
   451  01A4  1303               	bcf	3,6	;RP1=0, select bank1
   452  01A5  0086               	movwf	6	;volatile
   453  01A6                     l1005:
   454                           
   455                           ;main.c: 117:     TRISC = 0;
   456  01A6  0187               	clrf	7	;volatile
   457  01A7                     l1007:
   458                           
   459                           ;main.c: 118:     TRISD = 0;
   460  01A7  0188               	clrf	8	;volatile
   461  01A8                     l1009:
   462                           
   463                           ;main.c: 119:     TRISA = 0;
   464  01A8  0185               	clrf	5	;volatile
   465  01A9                     l1011:
   466                           
   467                           ;main.c: 122:     ANSEL = 0;
   468  01A9  1683               	bsf	3,5	;RP0=1, select bank3
   469  01AA  1703               	bsf	3,6	;RP1=1, select bank3
   470  01AB  0188               	clrf	8	;volatile
   471  01AC                     l1013:
   472                           
   473                           ;main.c: 123:     ANSELH = 0;
   474  01AC  0189               	clrf	9	;volatile
   475  01AD                     l1015:
   476                           
   477                           ;main.c: 125:     PORTC = 0;
   478  01AD  1283               	bcf	3,5	;RP0=0, select bank0
   479  01AE  1303               	bcf	3,6	;RP1=0, select bank0
   480  01AF  0187               	clrf	7	;volatile
   481  01B0                     l1017:
   482                           
   483                           ;main.c: 126:     PORTD = 0;
   484  01B0  0188               	clrf	8	;volatile
   485  01B1                     l1019:
   486                           
   487                           ;main.c: 127:     PORTA = 0;
   488  01B1  0185               	clrf	5	;volatile
   489  01B2                     l1021:
   490                           
   491                           ;main.c: 130:     OPTION_REGbits.nRBPU = 0;
   492  01B2  1683               	bsf	3,5	;RP0=1, select bank1
   493  01B3  1303               	bcf	3,6	;RP1=0, select bank1
   494  01B4  1381               	bcf	1,7	;volatile
   495  01B5                     l1023:
   496                           
   497                           ;main.c: 131:     OPTION_REGbits.PS = 6;
   498  01B5  0801               	movf	1,w	;volatile
   499  01B6  39F8               	andlw	-8
   500  01B7  3806               	iorlw	6
   501  01B8  0081               	movwf	1	;volatile
   502  01B9                     l1025:
   503                           
   504                           ;main.c: 132:     OPTION_REGbits.T0CS = 0;
   505  01B9  1281               	bcf	1,5	;volatile
   506  01BA                     l1027:
   507                           
   508                           ;main.c: 133:     OPTION_REGbits.PSA = 0;
   509  01BA  1181               	bcf	1,3	;volatile
   510  01BB                     l1029:
   511                           
   512                           ;main.c: 135:     TMR0 = 217;
   513  01BB  30D9               	movlw	217
   514  01BC  1283               	bcf	3,5	;RP0=0, select bank0
   515  01BD  1303               	bcf	3,6	;RP1=0, select bank0
   516  01BE  0081               	movwf	1	;volatile
   517  01BF                     l1031:
   518                           
   519                           ;main.c: 137:     IOCB = 3;
   520  01BF  3003               	movlw	3
   521  01C0  1683               	bsf	3,5	;RP0=1, select bank1
   522  01C1  1303               	bcf	3,6	;RP1=0, select bank1
   523  01C2  0096               	movwf	22	;volatile
   524  01C3                     l1033:
   525                           
   526                           ;main.c: 139:     INTCONbits.GIE = 1;
   527  01C3  178B               	bsf	11,7	;volatile
   528  01C4                     l1035:
   529                           
   530                           ;main.c: 140:     INTCONbits.T0IE = 1;
   531  01C4  168B               	bsf	11,5	;volatile
   532  01C5                     l1037:
   533                           
   534                           ;main.c: 141:     INTCONbits.RBIE = 1;
   535  01C5  158B               	bsf	11,3	;volatile
   536  01C6                     l58:	
   537                           ;main.c: 142:     while(1){
   538                           
   539  01C6                     l59:	
   540                           ;main.c: 143:     }
   541                           
   542  01C6  29C6               	goto	l58
   543  01C7  120A  118A  2810   	ljmp	start
   544  01CA                     __end_of_main:
   545                           
   546                           	psect	text1
   547  0029                     __ptext1:	
   548 ;; *************** function _ISR *****************
   549 ;; Defined at:
   550 ;;		line 60 in file "main.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   564 ;;      Params:         0       0       0       0       0
   565 ;;      Locals:         0       0       0       0       0
   566 ;;      Temps:          0       5       0       0       0
   567 ;;      Totals:         0       5       0       0       0
   568 ;;Total ram usage:        5 bytes
   569 ;; Hardware stack levels used:    1
   570 ;; Hardware stack levels required when called:    2
   571 ;; This function calls:
   572 ;;		_ConvertDec
   573 ;; This function is called by:
   574 ;;		Interrupt level 1
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           
   579                           ;psect for function _ISR
   580  0029                     _ISR:
   581  0029                     i1l953:
   582                           
   583                           ;main.c: 63:     if(INTCONbits.T0IF){
   584  0029  1D0B               	btfss	11,2	;volatile
   585  002A  282C               	goto	u51_21
   586  002B  282D               	goto	u51_20
   587  002C                     u51_21:
   588  002C  2868               	goto	i1l44
   589  002D                     u51_20:
   590  002D                     i1l955:
   591                           
   592                           ;main.c: 64:         TMR0 = 217;
   593  002D  30D9               	movlw	217
   594  002E  0081               	movwf	1	;volatile
   595                           
   596                           ;main.c: 68:         switch(contador){
   597  002F  2854               	goto	i1l983
   598  0030                     i1l957:
   599                           
   600                           ;main.c: 71:                 PORTD = 0 ;
   601  0030  0188               	clrf	8	;volatile
   602  0031                     i1l959:
   603                           
   604                           ;main.c: 72:                 PORTA = tableDisplay[ Decimal[0] ];
   605  0031  082F               	movf	_Decimal,w
   606  0032  3E20               	addlw	(low (_tableDisplay| 0))& (0+255)
   607  0033  0084               	movwf	4
   608  0034  1383               	bcf	3,7	;select IRP bank0
   609  0035  0800               	movf	0,w
   610  0036  0085               	movwf	5	;volatile
   611  0037                     i1l961:
   612                           
   613                           ;main.c: 74:                 PORTDbits.RD2 = 1;
   614  0037  1508               	bsf	8,2	;volatile
   615  0038                     i1l963:
   616                           
   617                           ;main.c: 75:                 contador = 1;
   618  0038  3001               	movlw	1
   619  0039  00AA               	movwf	??_ISR
   620  003A  082A               	movf	??_ISR,w
   621  003B  00FD               	movwf	_contador	;volatile
   622                           
   623                           ;main.c: 76:                 break;
   624  003C  2867               	goto	i1l47
   625  003D                     i1l965:
   626                           
   627                           ;main.c: 79:                 PORTD= 0;
   628  003D  0188               	clrf	8	;volatile
   629  003E                     i1l967:
   630                           
   631                           ;main.c: 80:                 PORTA = tableDisplay[Decimal[1]];
   632  003E  0830               	movf	_Decimal+1,w	;volatile
   633  003F  3E20               	addlw	(low (_tableDisplay| 0))& (0+255)
   634  0040  0084               	movwf	4
   635  0041  1383               	bcf	3,7	;select IRP bank0
   636  0042  0800               	movf	0,w
   637  0043  0085               	movwf	5	;volatile
   638  0044                     i1l969:
   639                           
   640                           ;main.c: 82:                 PORTDbits.RD1 = 1;
   641  0044  1488               	bsf	8,1	;volatile
   642  0045                     i1l971:
   643                           
   644                           ;main.c: 83:                 contador = 2;
   645  0045  3002               	movlw	2
   646  0046  00AA               	movwf	??_ISR
   647  0047  082A               	movf	??_ISR,w
   648  0048  00FD               	movwf	_contador	;volatile
   649                           
   650                           ;main.c: 84:                 break;
   651  0049  2867               	goto	i1l47
   652  004A                     i1l973:
   653                           
   654                           ;main.c: 87:                 PORTD= 0;
   655  004A  0188               	clrf	8	;volatile
   656  004B                     i1l975:
   657                           
   658                           ;main.c: 88:                 PORTA = tableDisplay[Decimal[2]];
   659  004B  0831               	movf	_Decimal+2,w	;volatile
   660  004C  3E20               	addlw	(low (_tableDisplay| 0))& (0+255)
   661  004D  0084               	movwf	4
   662  004E  1383               	bcf	3,7	;select IRP bank0
   663  004F  0800               	movf	0,w
   664  0050  0085               	movwf	5	;volatile
   665  0051                     i1l977:
   666                           
   667                           ;main.c: 90:                 PORTDbits.RD0 = 1;
   668  0051  1408               	bsf	8,0	;volatile
   669  0052                     i1l979:
   670                           
   671                           ;main.c: 91:                 contador = 0;
   672  0052  01FD               	clrf	_contador	;volatile
   673                           
   674                           ;main.c: 92:                 break;
   675  0053  2867               	goto	i1l47
   676  0054                     i1l983:
   677  0054  087D               	movf	_contador,w	;volatile
   678  0055  00AA               	movwf	??_ISR
   679  0056  01AB               	clrf	??_ISR+1
   680                           
   681                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   682                           ; Switch size 1, requested type "simple"
   683                           ; Number of cases is 1, Range of values is 0 to 0
   684                           ; switch strategies available:
   685                           ; Name         Instructions Cycles
   686                           ; simple_byte            4     3 (average)
   687                           ; direct_byte           11     8 (fixed)
   688                           ; jumptable            260     6 (fixed)
   689                           ;	Chosen strategy is simple_byte
   690  0057  082B               	movf	??_ISR+1,w
   691  0058  3A00               	xorlw	0	; case 0
   692  0059  1903               	skipnz
   693  005A  285C               	goto	i1l1069
   694  005B  2867               	goto	i1l47
   695  005C                     i1l1069:
   696                           
   697                           ; Switch size 1, requested type "simple"
   698                           ; Number of cases is 3, Range of values is 0 to 2
   699                           ; switch strategies available:
   700                           ; Name         Instructions Cycles
   701                           ; simple_byte           10     6 (average)
   702                           ; direct_byte           17     8 (fixed)
   703                           ; jumptable            260     6 (fixed)
   704                           ;	Chosen strategy is simple_byte
   705  005C  082A               	movf	??_ISR,w
   706  005D  3A00               	xorlw	0	; case 0
   707  005E  1903               	skipnz
   708  005F  2830               	goto	i1l957
   709  0060  3A01               	xorlw	1	; case 1
   710  0061  1903               	skipnz
   711  0062  283D               	goto	i1l965
   712  0063  3A03               	xorlw	3	; case 2
   713  0064  1903               	skipnz
   714  0065  284A               	goto	i1l973
   715  0066  2867               	goto	i1l47
   716  0067                     i1l47:
   717                           
   718                           ;main.c: 95:         INTCONbits.T0IF = 0;
   719  0067  110B               	bcf	11,2	;volatile
   720  0068                     i1l44:	
   721                           ;main.c: 97:     }
   722                           
   723                           
   724                           ;main.c: 99:     if(INTCONbits.RBIF){
   725  0068  1C0B               	btfss	11,0	;volatile
   726  0069  286B               	goto	u52_21
   727  006A  286C               	goto	u52_20
   728  006B                     u52_21:
   729  006B  2887               	goto	i1l53
   730  006C                     u52_20:
   731  006C                     i1l985:
   732                           
   733                           ;main.c: 102:         if(PORTBbits.RB0 == 0){
   734  006C  1806               	btfsc	6,0	;volatile
   735  006D  286F               	goto	u53_21
   736  006E  2870               	goto	u53_20
   737  006F                     u53_21:
   738  006F  2874               	goto	i1l989
   739  0070                     u53_20:
   740  0070                     i1l987:
   741                           
   742                           ;main.c: 103:             PORTC ++;
   743  0070  3001               	movlw	1
   744  0071  00AA               	movwf	??_ISR
   745  0072  082A               	movf	??_ISR,w
   746  0073  0787               	addwf	7,f	;volatile
   747  0074                     i1l989:
   748                           
   749                           ;main.c: 106:         if(PORTBbits.RB1 == 0){
   750  0074  1886               	btfsc	6,1	;volatile
   751  0075  2877               	goto	u54_21
   752  0076  2878               	goto	u54_20
   753  0077                     u54_21:
   754  0077  287A               	goto	i1l993
   755  0078                     u54_20:
   756  0078                     i1l991:
   757                           
   758                           ;main.c: 107:             PORTC --;
   759  0078  3001               	movlw	1
   760  0079  0287               	subwf	7,f	;volatile
   761  007A                     i1l993:
   762                           
   763                           ;main.c: 109:         ConvertDec(PORTC);
   764  007A  0807               	movf	7,w	;volatile
   765  007B  00AA               	movwf	??_ISR
   766  007C  01AB               	clrf	??_ISR+1
   767  007D  082A               	movf	??_ISR,w
   768  007E  00F9               	movwf	ConvertDec@valor
   769  007F  082B               	movf	??_ISR+1,w
   770  0080  00FA               	movwf	ConvertDec@valor+1
   771  0081  120A  118A  2152  120A  118A  	fcall	_ConvertDec
   772  0086                     i1l995:
   773                           
   774                           ;main.c: 110:         INTCONbits.RBIF = 0;
   775  0086  100B               	bcf	11,0	;volatile
   776  0087                     i1l53:
   777  0087  1283               	bcf	3,5	;RP0=0, select bank0
   778  0088  1303               	bcf	3,6	;RP1=0, select bank0
   779  0089  082E               	movf	??_ISR+4,w
   780  008A  008A               	movwf	10
   781  008B  082D               	movf	??_ISR+3,w
   782  008C  0084               	movwf	4
   783  008D  0E2C               	swapf	??_ISR+2,w
   784  008E  0083               	movwf	3
   785  008F  0EFE               	swapf	btemp,f
   786  0090  0E7E               	swapf	btemp,w
   787  0091  0009               	retfie
   788  0092                     __end_of_ISR:
   789                           
   790                           	psect	intentry
   791  0004                     __pintentry:	
   792                           ;incstack = 0
   793                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   794                           
   795  0004                     interrupt_function:
   796  007E                     saved_w	set	btemp
   797  0004  00FE               	movwf	btemp
   798  0005  0E03               	swapf	3,w
   799  0006  1283               	bcf	3,5	;RP0=0, select bank0
   800  0007  1303               	bcf	3,6	;RP1=0, select bank0
   801  0008  00AC               	movwf	??_ISR+2
   802  0009  0804               	movf	4,w
   803  000A  00AD               	movwf	??_ISR+3
   804  000B  080A               	movf	10,w
   805  000C  00AE               	movwf	??_ISR+4
   806  000D  120A  118A  2829   	ljmp	_ISR
   807                           
   808                           	psect	text2
   809  0152                     __ptext2:	
   810 ;; *************** function _ConvertDec *****************
   811 ;; Defined at:
   812 ;;		line 49 in file "main.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;  valor           2    9[COMMON] int 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;		None
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, status,2, status,0, pclath, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         2       0       0       0       0
   827 ;;      Locals:         0       0       0       0       0
   828 ;;      Temps:          2       0       0       0       0
   829 ;;      Totals:         4       0       0       0       0
   830 ;;Total ram usage:        4 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; Hardware stack levels required when called:    1
   833 ;; This function calls:
   834 ;;		___awdiv
   835 ;;		___awmod
   836 ;;		___wmul
   837 ;; This function is called by:
   838 ;;		_ISR
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           
   843                           ;psect for function _ConvertDec
   844  0152                     _ConvertDec:
   845  0152                     i1l951:	
   846                           ;incstack = 0
   847                           ; Regs used in _ConvertDec: [wreg+status,2+status,0+pclath+cstack]
   848                           
   849                           
   850                           ;main.c: 52:     Decimal[2] = valor/100;
   851  0152  3064               	movlw	100
   852  0153  00F0               	movwf	___awdiv@divisor
   853  0154  3000               	movlw	0
   854  0155  00F1               	movwf	___awdiv@divisor+1
   855  0156  087A               	movf	ConvertDec@valor+1,w
   856  0157  00F3               	movwf	___awdiv@dividend+1
   857  0158  0879               	movf	ConvertDec@valor,w
   858  0159  00F2               	movwf	___awdiv@dividend
   859  015A  120A  118A  2092  120A  118A  	fcall	___awdiv
   860  015F  0870               	movf	?___awdiv,w
   861  0160  00FB               	movwf	??_ConvertDec
   862  0161  087B               	movf	??_ConvertDec,w
   863  0162  1283               	bcf	3,5	;RP0=0, select bank0
   864  0163  1303               	bcf	3,6	;RP1=0, select bank0
   865  0164  00B1               	movwf	_Decimal+2	;volatile
   866                           
   867                           ;main.c: 53:     valor -= Decimal[2]*100;
   868  0165  0831               	movf	_Decimal+2,w	;volatile
   869  0166  00FB               	movwf	??_ConvertDec
   870  0167  01FC               	clrf	??_ConvertDec+1
   871  0168  087B               	movf	??_ConvertDec,w
   872  0169  00F0               	movwf	___wmul@multiplier
   873  016A  087C               	movf	??_ConvertDec+1,w
   874  016B  00F1               	movwf	___wmul@multiplier+1
   875  016C  3064               	movlw	100
   876  016D  00F2               	movwf	___wmul@multiplicand
   877  016E  3000               	movlw	0
   878  016F  00F3               	movwf	___wmul@multiplicand+1
   879  0170  120A  118A  21CA  120A  118A  	fcall	___wmul
   880  0175  0870               	movf	?___wmul,w
   881  0176  02F9               	subwf	ConvertDec@valor,f
   882  0177  0871               	movf	?___wmul+1,w
   883  0178  1C03               	skipc
   884  0179  03FA               	decf	ConvertDec@valor+1,f
   885  017A  02FA               	subwf	ConvertDec@valor+1,f
   886                           
   887                           ;main.c: 54:     Decimal[1] = valor/10;
   888  017B  300A               	movlw	10
   889  017C  00F0               	movwf	___awdiv@divisor
   890  017D  3000               	movlw	0
   891  017E  00F1               	movwf	___awdiv@divisor+1
   892  017F  087A               	movf	ConvertDec@valor+1,w
   893  0180  00F3               	movwf	___awdiv@dividend+1
   894  0181  0879               	movf	ConvertDec@valor,w
   895  0182  00F2               	movwf	___awdiv@dividend
   896  0183  120A  118A  2092  120A  118A  	fcall	___awdiv
   897  0188  0870               	movf	?___awdiv,w
   898  0189  00FB               	movwf	??_ConvertDec
   899  018A  087B               	movf	??_ConvertDec,w
   900  018B  1283               	bcf	3,5	;RP0=0, select bank0
   901  018C  1303               	bcf	3,6	;RP1=0, select bank0
   902  018D  00B0               	movwf	_Decimal+1	;volatile
   903                           
   904                           ;main.c: 55:     Decimal[0] = valor%10;
   905  018E  300A               	movlw	10
   906  018F  00F0               	movwf	___awmod@divisor
   907  0190  3000               	movlw	0
   908  0191  00F1               	movwf	___awmod@divisor+1
   909  0192  087A               	movf	ConvertDec@valor+1,w
   910  0193  00F3               	movwf	___awmod@dividend+1
   911  0194  0879               	movf	ConvertDec@valor,w
   912  0195  00F2               	movwf	___awmod@dividend
   913  0196  120A  118A  20F9  120A  118A  	fcall	___awmod
   914  019B  0870               	movf	?___awmod,w
   915  019C  00FB               	movwf	??_ConvertDec
   916  019D  087B               	movf	??_ConvertDec,w
   917  019E  1283               	bcf	3,5	;RP0=0, select bank0
   918  019F  1303               	bcf	3,6	;RP1=0, select bank0
   919  01A0  00AF               	movwf	_Decimal	;volatile
   920  01A1                     i1l39:
   921  01A1  0008               	return
   922  01A2                     __end_of_ConvertDec:
   923                           
   924                           	psect	text3
   925  01CA                     __ptext3:	
   926 ;; *************** function ___wmul *****************
   927 ;; Defined at:
   928 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;  multiplier      2    0[COMMON] unsigned int 
   931 ;;  multiplicand    2    2[COMMON] unsigned int 
   932 ;; Auto vars:     Size  Location     Type
   933 ;;  product         2    4[COMMON] unsigned int 
   934 ;; Return value:  Size  Location     Type
   935 ;;                  2    0[COMMON] unsigned int 
   936 ;; Registers used:
   937 ;;		wreg, status,2, status,0
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   943 ;;      Params:         4       0       0       0       0
   944 ;;      Locals:         2       0       0       0       0
   945 ;;      Temps:          0       0       0       0       0
   946 ;;      Totals:         6       0       0       0       0
   947 ;;Total ram usage:        6 bytes
   948 ;; Hardware stack levels used:    1
   949 ;; This function calls:
   950 ;;		Nothing
   951 ;; This function is called by:
   952 ;;		_ConvertDec
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           
   957                           ;psect for function ___wmul
   958  01CA                     ___wmul:
   959  01CA                     i1l855:	
   960                           ;incstack = 0
   961                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   962                           
   963  01CA  01F4               	clrf	___wmul@product
   964  01CB  01F5               	clrf	___wmul@product+1
   965  01CC                     i1l857:
   966  01CC  1C70               	btfss	___wmul@multiplier,0
   967  01CD  29CF               	goto	u28_21
   968  01CE  29D0               	goto	u28_20
   969  01CF                     u28_21:
   970  01CF  29D6               	goto	i1l147
   971  01D0                     u28_20:
   972  01D0                     i1l859:
   973  01D0  0872               	movf	___wmul@multiplicand,w
   974  01D1  07F4               	addwf	___wmul@product,f
   975  01D2  1803               	skipnc
   976  01D3  0AF5               	incf	___wmul@product+1,f
   977  01D4  0873               	movf	___wmul@multiplicand+1,w
   978  01D5  07F5               	addwf	___wmul@product+1,f
   979  01D6                     i1l147:
   980  01D6  3001               	movlw	1
   981  01D7                     u29_25:
   982  01D7  1003               	clrc
   983  01D8  0DF2               	rlf	___wmul@multiplicand,f
   984  01D9  0DF3               	rlf	___wmul@multiplicand+1,f
   985  01DA  3EFF               	addlw	-1
   986  01DB  1D03               	skipz
   987  01DC  29D7               	goto	u29_25
   988  01DD                     i1l861:
   989  01DD  3001               	movlw	1
   990  01DE                     u30_25:
   991  01DE  1003               	clrc
   992  01DF  0CF1               	rrf	___wmul@multiplier+1,f
   993  01E0  0CF0               	rrf	___wmul@multiplier,f
   994  01E1  3EFF               	addlw	-1
   995  01E2  1D03               	skipz
   996  01E3  29DE               	goto	u30_25
   997  01E4                     i1l863:
   998  01E4  0870               	movf	___wmul@multiplier,w
   999  01E5  0471               	iorwf	___wmul@multiplier+1,w
  1000  01E6  1D03               	btfss	3,2
  1001  01E7  29E9               	goto	u31_21
  1002  01E8  29EA               	goto	u31_20
  1003  01E9                     u31_21:
  1004  01E9  29CC               	goto	i1l857
  1005  01EA                     u31_20:
  1006  01EA                     i1l865:
  1007  01EA  0875               	movf	___wmul@product+1,w
  1008  01EB  00F1               	movwf	?___wmul+1
  1009  01EC  0874               	movf	___wmul@product,w
  1010  01ED  00F0               	movwf	?___wmul
  1011  01EE                     i1l149:
  1012  01EE  0008               	return
  1013  01EF                     __end_of___wmul:
  1014                           
  1015                           	psect	text4
  1016  00F9                     __ptext4:	
  1017 ;; *************** function ___awmod *****************
  1018 ;; Defined at:
  1019 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  divisor         2    0[COMMON] int 
  1022 ;;  dividend        2    2[COMMON] int 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  sign            1    6[COMMON] unsigned char 
  1025 ;;  counter         1    5[COMMON] unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  2    0[COMMON] int 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, status,0
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1035 ;;      Params:         4       0       0       0       0
  1036 ;;      Locals:         2       0       0       0       0
  1037 ;;      Temps:          1       0       0       0       0
  1038 ;;      Totals:         7       0       0       0       0
  1039 ;;Total ram usage:        7 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; This function calls:
  1042 ;;		Nothing
  1043 ;; This function is called by:
  1044 ;;		_ConvertDec
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           
  1049                           ;psect for function ___awmod
  1050  00F9                     ___awmod:
  1051  00F9                     i1l913:	
  1052                           ;incstack = 0
  1053                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1054                           
  1055  00F9  01F6               	clrf	___awmod@sign
  1056  00FA                     i1l915:
  1057  00FA  1FF3               	btfss	___awmod@dividend+1,7
  1058  00FB  28FD               	goto	u42_21
  1059  00FC  28FE               	goto	u42_20
  1060  00FD                     u42_21:
  1061  00FD  2905               	goto	i1l921
  1062  00FE                     u42_20:
  1063  00FE                     i1l917:
  1064  00FE  09F2               	comf	___awmod@dividend,f
  1065  00FF  09F3               	comf	___awmod@dividend+1,f
  1066  0100  0AF2               	incf	___awmod@dividend,f
  1067  0101  1903               	skipnz
  1068  0102  0AF3               	incf	___awmod@dividend+1,f
  1069  0103                     i1l919:
  1070  0103  01F6               	clrf	___awmod@sign
  1071  0104  0AF6               	incf	___awmod@sign,f
  1072  0105                     i1l921:
  1073  0105  1FF1               	btfss	___awmod@divisor+1,7
  1074  0106  2908               	goto	u43_21
  1075  0107  2909               	goto	u43_20
  1076  0108                     u43_21:
  1077  0108  290E               	goto	i1l925
  1078  0109                     u43_20:
  1079  0109                     i1l923:
  1080  0109  09F0               	comf	___awmod@divisor,f
  1081  010A  09F1               	comf	___awmod@divisor+1,f
  1082  010B  0AF0               	incf	___awmod@divisor,f
  1083  010C  1903               	skipnz
  1084  010D  0AF1               	incf	___awmod@divisor+1,f
  1085  010E                     i1l925:
  1086  010E  0870               	movf	___awmod@divisor,w
  1087  010F  0471               	iorwf	___awmod@divisor+1,w
  1088  0110  1903               	btfsc	3,2
  1089  0111  2913               	goto	u44_21
  1090  0112  2914               	goto	u44_20
  1091  0113                     u44_21:
  1092  0113  2943               	goto	i1l943
  1093  0114                     u44_20:
  1094  0114                     i1l927:
  1095  0114  01F5               	clrf	___awmod@counter
  1096  0115  0AF5               	incf	___awmod@counter,f
  1097  0116  2922               	goto	i1l933
  1098  0117                     i1l929:
  1099  0117  3001               	movlw	1
  1100  0118                     u45_25:
  1101  0118  1003               	clrc
  1102  0119  0DF0               	rlf	___awmod@divisor,f
  1103  011A  0DF1               	rlf	___awmod@divisor+1,f
  1104  011B  3EFF               	addlw	-1
  1105  011C  1D03               	skipz
  1106  011D  2918               	goto	u45_25
  1107  011E                     i1l931:
  1108  011E  3001               	movlw	1
  1109  011F  00F4               	movwf	??___awmod
  1110  0120  0874               	movf	??___awmod,w
  1111  0121  07F5               	addwf	___awmod@counter,f
  1112  0122                     i1l933:
  1113  0122  1FF1               	btfss	___awmod@divisor+1,7
  1114  0123  2925               	goto	u46_21
  1115  0124  2926               	goto	u46_20
  1116  0125                     u46_21:
  1117  0125  2917               	goto	i1l929
  1118  0126                     u46_20:
  1119  0126                     i1l935:
  1120  0126  0871               	movf	___awmod@divisor+1,w
  1121  0127  0273               	subwf	___awmod@dividend+1,w
  1122  0128  1D03               	skipz
  1123  0129  292C               	goto	u47_25
  1124  012A  0870               	movf	___awmod@divisor,w
  1125  012B  0272               	subwf	___awmod@dividend,w
  1126  012C                     u47_25:
  1127  012C  1C03               	skipc
  1128  012D  292F               	goto	u47_21
  1129  012E  2930               	goto	u47_20
  1130  012F                     u47_21:
  1131  012F  2936               	goto	i1l939
  1132  0130                     u47_20:
  1133  0130                     i1l937:
  1134  0130  0870               	movf	___awmod@divisor,w
  1135  0131  02F2               	subwf	___awmod@dividend,f
  1136  0132  0871               	movf	___awmod@divisor+1,w
  1137  0133  1C03               	skipc
  1138  0134  03F3               	decf	___awmod@dividend+1,f
  1139  0135  02F3               	subwf	___awmod@dividend+1,f
  1140  0136                     i1l939:
  1141  0136  3001               	movlw	1
  1142  0137                     u48_25:
  1143  0137  1003               	clrc
  1144  0138  0CF1               	rrf	___awmod@divisor+1,f
  1145  0139  0CF0               	rrf	___awmod@divisor,f
  1146  013A  3EFF               	addlw	-1
  1147  013B  1D03               	skipz
  1148  013C  2937               	goto	u48_25
  1149  013D                     i1l941:
  1150  013D  3001               	movlw	1
  1151  013E  02F5               	subwf	___awmod@counter,f
  1152  013F  1D03               	btfss	3,2
  1153  0140  2942               	goto	u49_21
  1154  0141  2943               	goto	u49_20
  1155  0142                     u49_21:
  1156  0142  2926               	goto	i1l935
  1157  0143                     u49_20:
  1158  0143                     i1l943:
  1159  0143  0876               	movf	___awmod@sign,w
  1160  0144  1903               	btfsc	3,2
  1161  0145  2947               	goto	u50_21
  1162  0146  2948               	goto	u50_20
  1163  0147                     u50_21:
  1164  0147  294D               	goto	i1l947
  1165  0148                     u50_20:
  1166  0148                     i1l945:
  1167  0148  09F2               	comf	___awmod@dividend,f
  1168  0149  09F3               	comf	___awmod@dividend+1,f
  1169  014A  0AF2               	incf	___awmod@dividend,f
  1170  014B  1903               	skipnz
  1171  014C  0AF3               	incf	___awmod@dividend+1,f
  1172  014D                     i1l947:
  1173  014D  0873               	movf	___awmod@dividend+1,w
  1174  014E  00F1               	movwf	?___awmod+1
  1175  014F  0872               	movf	___awmod@dividend,w
  1176  0150  00F0               	movwf	?___awmod
  1177  0151                     i1l313:
  1178  0151  0008               	return
  1179  0152                     __end_of___awmod:
  1180                           
  1181                           	psect	text5
  1182  0092                     __ptext5:	
  1183 ;; *************** function ___awdiv *****************
  1184 ;; Defined at:
  1185 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  divisor         2    0[COMMON] int 
  1188 ;;  dividend        2    2[COMMON] int 
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;  quotient        2    7[COMMON] int 
  1191 ;;  sign            1    6[COMMON] unsigned char 
  1192 ;;  counter         1    5[COMMON] unsigned char 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  2    0[COMMON] int 
  1195 ;; Registers used:
  1196 ;;		wreg, status,2, status,0
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1202 ;;      Params:         4       0       0       0       0
  1203 ;;      Locals:         4       0       0       0       0
  1204 ;;      Temps:          1       0       0       0       0
  1205 ;;      Totals:         9       0       0       0       0
  1206 ;;Total ram usage:        9 bytes
  1207 ;; Hardware stack levels used:    1
  1208 ;; This function calls:
  1209 ;;		Nothing
  1210 ;; This function is called by:
  1211 ;;		_ConvertDec
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           
  1216                           ;psect for function ___awdiv
  1217  0092                     ___awdiv:
  1218  0092                     i1l869:	
  1219                           ;incstack = 0
  1220                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1221                           
  1222  0092  01F6               	clrf	___awdiv@sign
  1223  0093                     i1l871:
  1224  0093  1FF1               	btfss	___awdiv@divisor+1,7
  1225  0094  2896               	goto	u32_21
  1226  0095  2897               	goto	u32_20
  1227  0096                     u32_21:
  1228  0096  289E               	goto	i1l877
  1229  0097                     u32_20:
  1230  0097                     i1l873:
  1231  0097  09F0               	comf	___awdiv@divisor,f
  1232  0098  09F1               	comf	___awdiv@divisor+1,f
  1233  0099  0AF0               	incf	___awdiv@divisor,f
  1234  009A  1903               	skipnz
  1235  009B  0AF1               	incf	___awdiv@divisor+1,f
  1236  009C                     i1l875:
  1237  009C  01F6               	clrf	___awdiv@sign
  1238  009D  0AF6               	incf	___awdiv@sign,f
  1239  009E                     i1l877:
  1240  009E  1FF3               	btfss	___awdiv@dividend+1,7
  1241  009F  28A1               	goto	u33_21
  1242  00A0  28A2               	goto	u33_20
  1243  00A1                     u33_21:
  1244  00A1  28AB               	goto	i1l883
  1245  00A2                     u33_20:
  1246  00A2                     i1l879:
  1247  00A2  09F2               	comf	___awdiv@dividend,f
  1248  00A3  09F3               	comf	___awdiv@dividend+1,f
  1249  00A4  0AF2               	incf	___awdiv@dividend,f
  1250  00A5  1903               	skipnz
  1251  00A6  0AF3               	incf	___awdiv@dividend+1,f
  1252  00A7                     i1l881:
  1253  00A7  3001               	movlw	1
  1254  00A8  00F4               	movwf	??___awdiv
  1255  00A9  0874               	movf	??___awdiv,w
  1256  00AA  06F6               	xorwf	___awdiv@sign,f
  1257  00AB                     i1l883:
  1258  00AB  01F7               	clrf	___awdiv@quotient
  1259  00AC  01F8               	clrf	___awdiv@quotient+1
  1260  00AD                     i1l885:
  1261  00AD  0870               	movf	___awdiv@divisor,w
  1262  00AE  0471               	iorwf	___awdiv@divisor+1,w
  1263  00AF  1903               	btfsc	3,2
  1264  00B0  28B2               	goto	u34_21
  1265  00B1  28B3               	goto	u34_20
  1266  00B2                     u34_21:
  1267  00B2  28EA               	goto	i1l905
  1268  00B3                     u34_20:
  1269  00B3                     i1l887:
  1270  00B3  01F5               	clrf	___awdiv@counter
  1271  00B4  0AF5               	incf	___awdiv@counter,f
  1272  00B5  28C1               	goto	i1l893
  1273  00B6                     i1l889:
  1274  00B6  3001               	movlw	1
  1275  00B7                     u35_25:
  1276  00B7  1003               	clrc
  1277  00B8  0DF0               	rlf	___awdiv@divisor,f
  1278  00B9  0DF1               	rlf	___awdiv@divisor+1,f
  1279  00BA  3EFF               	addlw	-1
  1280  00BB  1D03               	skipz
  1281  00BC  28B7               	goto	u35_25
  1282  00BD                     i1l891:
  1283  00BD  3001               	movlw	1
  1284  00BE  00F4               	movwf	??___awdiv
  1285  00BF  0874               	movf	??___awdiv,w
  1286  00C0  07F5               	addwf	___awdiv@counter,f
  1287  00C1                     i1l893:
  1288  00C1  1FF1               	btfss	___awdiv@divisor+1,7
  1289  00C2  28C4               	goto	u36_21
  1290  00C3  28C5               	goto	u36_20
  1291  00C4                     u36_21:
  1292  00C4  28B6               	goto	i1l889
  1293  00C5                     u36_20:
  1294  00C5                     i1l895:
  1295  00C5  3001               	movlw	1
  1296  00C6                     u37_25:
  1297  00C6  1003               	clrc
  1298  00C7  0DF7               	rlf	___awdiv@quotient,f
  1299  00C8  0DF8               	rlf	___awdiv@quotient+1,f
  1300  00C9  3EFF               	addlw	-1
  1301  00CA  1D03               	skipz
  1302  00CB  28C6               	goto	u37_25
  1303  00CC  0871               	movf	___awdiv@divisor+1,w
  1304  00CD  0273               	subwf	___awdiv@dividend+1,w
  1305  00CE  1D03               	skipz
  1306  00CF  28D2               	goto	u38_25
  1307  00D0  0870               	movf	___awdiv@divisor,w
  1308  00D1  0272               	subwf	___awdiv@dividend,w
  1309  00D2                     u38_25:
  1310  00D2  1C03               	skipc
  1311  00D3  28D5               	goto	u38_21
  1312  00D4  28D6               	goto	u38_20
  1313  00D5                     u38_21:
  1314  00D5  28DD               	goto	i1l901
  1315  00D6                     u38_20:
  1316  00D6                     i1l897:
  1317  00D6  0870               	movf	___awdiv@divisor,w
  1318  00D7  02F2               	subwf	___awdiv@dividend,f
  1319  00D8  0871               	movf	___awdiv@divisor+1,w
  1320  00D9  1C03               	skipc
  1321  00DA  03F3               	decf	___awdiv@dividend+1,f
  1322  00DB  02F3               	subwf	___awdiv@dividend+1,f
  1323  00DC                     i1l899:
  1324  00DC  1477               	bsf	___awdiv@quotient,0
  1325  00DD                     i1l901:
  1326  00DD  3001               	movlw	1
  1327  00DE                     u39_25:
  1328  00DE  1003               	clrc
  1329  00DF  0CF1               	rrf	___awdiv@divisor+1,f
  1330  00E0  0CF0               	rrf	___awdiv@divisor,f
  1331  00E1  3EFF               	addlw	-1
  1332  00E2  1D03               	skipz
  1333  00E3  28DE               	goto	u39_25
  1334  00E4                     i1l903:
  1335  00E4  3001               	movlw	1
  1336  00E5  02F5               	subwf	___awdiv@counter,f
  1337  00E6  1D03               	btfss	3,2
  1338  00E7  28E9               	goto	u40_21
  1339  00E8  28EA               	goto	u40_20
  1340  00E9                     u40_21:
  1341  00E9  28C5               	goto	i1l895
  1342  00EA                     u40_20:
  1343  00EA                     i1l905:
  1344  00EA  0876               	movf	___awdiv@sign,w
  1345  00EB  1903               	btfsc	3,2
  1346  00EC  28EE               	goto	u41_21
  1347  00ED  28EF               	goto	u41_20
  1348  00EE                     u41_21:
  1349  00EE  28F4               	goto	i1l909
  1350  00EF                     u41_20:
  1351  00EF                     i1l907:
  1352  00EF  09F7               	comf	___awdiv@quotient,f
  1353  00F0  09F8               	comf	___awdiv@quotient+1,f
  1354  00F1  0AF7               	incf	___awdiv@quotient,f
  1355  00F2  1903               	skipnz
  1356  00F3  0AF8               	incf	___awdiv@quotient+1,f
  1357  00F4                     i1l909:
  1358  00F4  0878               	movf	___awdiv@quotient+1,w
  1359  00F5  00F1               	movwf	?___awdiv+1
  1360  00F6  0877               	movf	___awdiv@quotient,w
  1361  00F7  00F0               	movwf	?___awdiv
  1362  00F8                     i1l300:
  1363  00F8  0008               	return
  1364  00F9                     __end_of___awdiv:
  1365  007E                     btemp	set	126	;btemp
  1366  007E                     wtemp0	set	126
  1367                           
  1368                           	psect	config
  1369                           
  1370                           ;Config register CONFIG1 @ 0x2007
  1371                           ;	Oscillator Selection bits
  1372                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1373                           ;	Watchdog Timer Enable bit
  1374                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1375                           ;	Power-up Timer Enable bit
  1376                           ;	PWRTE = OFF, PWRT disabled
  1377                           ;	RE3/MCLR pin function select bit
  1378                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1379                           ;	Code Protection bit
  1380                           ;	CP = OFF, Program memory code protection is disabled
  1381                           ;	Data Code Protection bit
  1382                           ;	CPD = OFF, Data memory code protection is disabled
  1383                           ;	Brown Out Reset Selection bits
  1384                           ;	BOREN = OFF, BOR disabled
  1385                           ;	Internal External Switchover bit
  1386                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1387                           ;	Fail-Safe Clock Monitor Enabled bit
  1388                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1389                           ;	Low Voltage Programming Enable bit
  1390                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1391                           ;	In-Circuit Debugger Mode bit
  1392                           ;	DEBUG = 0x1, unprogrammed default
  1393  2007                     	org	8199
  1394  2007  20D4               	dw	8404
  1395                           
  1396                           ;Config register CONFIG2 @ 0x2008
  1397                           ;	Brown-out Reset Selection bit
  1398                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1399                           ;	Flash Program Memory Self Write Enable bits
  1400                           ;	WRT = OFF, Write protection off
  1401  2008                     	org	8200
  1402  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      5      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_ConvertDec
    _ConvertDec->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  5     5      0    1439
                                              0 BANK0      5     5      0
                         _ConvertDec
 ---------------------------------------------------------------------------------
 (2) _ConvertDec                                           4     2      2    1439
                                              9 COMMON     4     2      2
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)
   _ConvertDec
     ___awdiv
     ___awmod
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      5      12       5       22.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      20      12        0.0%
ABS                  0      0      20       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Apr 18 20:29:14 2021

                      pc 0002                       l58 01C6                       l59 01C6  
           ___awdiv@sign 0076                       fsr 0004      ___wmul@multiplicand 0072  
                    _ISR 0029                      fsr0 0004                      indf 0000  
           ___awmod@sign 0076                     ?_ISR 0070                     l1011 01A9  
                   l1003 01A2                     l1021 01B2                     l1013 01AC  
                   l1005 01A6                     l1031 01BF                     l1023 01B5  
                   l1015 01AD                     l1007 01A7                     l1033 01C3  
                   l1025 01B9                     l1017 01B0                     l1009 01A8  
                   l1035 01C4                     l1027 01BA                     l1019 01B1  
                   l1037 01C5                     l1029 01BB                     _IOCB 0096  
                   i1l44 0068                     i1l53 0087                     i1l39 01A1  
                   i1l47 0067                     _TMR0 0001                     _main 01A2  
                   btemp 007E                     start 0010                    ??_ISR 002A  
                  ?_main 0070          __end_of___awdiv 00F9          __end_of___awmod 0152  
                  _ANSEL 0188          ___awdiv@divisor 0070                    i1l300 00F8  
                  i1l313 0151                    i1l147 01D6                    i1l149 01EE  
                  i1l901 00DD                    i1l903 00E4                    i1l905 00EA  
                  i1l921 0105                    i1l913 00F9                    i1l907 00EF  
                  i1l931 011E                    i1l923 0109                    i1l915 00FA  
                  i1l909 00F4                    i1l941 013D                    i1l933 0122  
                  i1l925 010E                    i1l917 00FE                    i1l861 01DD  
                  i1l871 0093                    i1l935 0126                    i1l927 0114  
                  i1l943 0143                    i1l919 0103                    i1l863 01E4  
                  i1l855 01CA                    i1l951 0152                    i1l881 00A7  
                  i1l873 0097                    i1l945 0148                    i1l937 0130  
                  i1l929 0117                    i1l865 01EA                    i1l857 01CC  
                  i1l961 0037                    i1l953 0029                    i1l891 00BD  
                  i1l883 00AB                    i1l875 009C                    i1l947 014D  
                  i1l939 0136                    i1l859 01D0                    i1l971 0045  
                  i1l963 0038                    i1l955 002D                    i1l893 00C1  
                  i1l885 00AD                    i1l877 009E                    i1l869 0092  
                  i1l973 004A                    i1l965 003D                    i1l957 0030  
                  i1l895 00C5                    i1l887 00B3                    i1l879 00A2  
                  i1l991 0078                    i1l975 004B                    i1l967 003E  
                  i1l959 0031                    i1l983 0054                    i1l897 00D6  
                  i1l889 00B6                    i1l993 007A                    i1l985 006C  
                  i1l977 0051                    i1l969 0044                    i1l899 00DC  
                  i1l995 0086                    i1l987 0070                    i1l979 0052  
                  i1l989 0074          ___awdiv@counter 0075                    u30_25 01DE  
                  u31_20 01EA                    u31_21 01E9                    u40_20 00EA  
                  u32_20 0097                    u40_21 00E9                    u32_21 0096  
                  u41_20 00EF                    u33_20 00A2                    u41_21 00EE  
                  u33_21 00A1                    u34_20 00B3                    u50_20 0148  
                  u42_20 00FE                    u34_21 00B2                    u50_21 0147  
                  u42_21 00FD                    u43_20 0109                    u51_20 002D  
                  u43_21 0108                    u51_21 002C                    _PORTA 0005  
                  _PORTC 0007                    _PORTD 0008                    u35_25 00B7  
                  u36_20 00C5                    u44_20 0114                    u28_20 01D0  
                  u52_20 006C                    u36_21 00C4                    u44_21 0113  
                  u28_21 01CF                    u52_21 006B                    u53_20 0070  
                  u53_21 006F                    u37_25 00C6                    u45_25 0118  
                  u29_25 01D7                    u38_20 00D6                    u46_20 0126  
                  u54_20 0078                    u38_21 00D5                    u46_21 0125  
                  u54_21 0077                    u38_25 00D2                    u47_20 0130  
                  u47_21 012F                    u39_25 00DE                    u47_25 012C  
                  u48_25 0137                    u49_20 0143                    u49_21 0142  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088               _ConvertDec 0152                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0013  
           __end_of_main 01CA                   ??_main 002F         ___awdiv@dividend 0072  
                 _ANSELH 0189                   i1l1069 005C                   ___wmul 01CA  
              ??___awdiv 0074                ??___awmod 0074         ___awdiv@quotient 0077  
        ___awmod@divisor 0070          ___awmod@counter 0075                   saved_w 007E  
            ?_ConvertDec 0079  __end_of__initialization 0025           __pcstackCOMMON 0070  
        ConvertDec@valor 0079             __pidataBANK0 0202           _OPTION_REGbits 0081  
             __pbssBANK0 002F               __pmaintext 01A2                  ?___wmul 0070  
             __pintentry 0004      __size_of_ConvertDec 0050                  _Decimal 002F  
                ___awdiv 0092                  ___awmod 00F9          __size_of___wmul 0025  
                __ptext1 0029                  __ptext2 0152                  __ptext3 01CA  
                __ptext4 00F9                  __ptext5 0092             __size_of_ISR 0069  
       ___awmod@dividend 0072     end_of_initialization 0025                _PORTBbits 0006  
              _PORTDbits 0008             ??_ConvertDec 007B           __end_of___wmul 01EF  
     __end_of_ConvertDec 01A2      start_initialization 0013              __end_of_ISR 0092  
               ??___wmul 0074               init_fetch0 01EF              __pdataBANK0 0020  
            __pbssCOMMON 007D                ___latbits 0002            __pcstackBANK0 002A  
               ?___awdiv 0070                 ?___awmod 0070             _tableDisplay 0020  
      interrupt_function 0004           ___wmul@product 0074        ___wmul@multiplier 0070  
       __size_of___awdiv 0067         __size_of___awmod 0059                 _contador 007D  
          __size_of_main 0028               _INTCONbits 000B                 init_ram0 01F3  
               intlevel1 0000  
